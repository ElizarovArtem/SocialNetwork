{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","hoc/WithAuthRedirect.tsx","Components/Dialogs/DialogItem/DialogItem.tsx","Components/Dialogs/Message/Message.tsx","Components/Dialogs/Dialogs.tsx","Components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","MapStateToProps","store","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","className","s","dialog","id","activeClassName","active","name","Message","owner","messageItem1","src","userAva","message","messageItem2","maxLength50","maxLengthCreator","ReduxMessageField","reduxForm","form","onSubmit","handleSubmit","Field","messageArea","component","Textarea","validate","required","placeholder","submitButton","DialogsContainer","compose","state","dialogsState","messagesPage","dispatch","onSendMessage","newMessage","type","dialogsElements","dialogs","map","messagesElements","messages","dialogsItems","data","newMessageBody"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,aAAe,8BAA8B,aAAe,8BAA8B,eAAiB,gCAAgC,YAAc,6BAA6B,aAAe,gC,uICI3aC,EAAkB,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIdE,EAAmB,SAACC,GAAyB,IAChDC,EAD+C,uKAG7C,OAAKC,KAAKC,MAAMN,OAET,kBAACG,EAAcE,KAAKC,OAFI,kBAAC,IAAD,CAAUC,GAAI,eAHA,GACrBC,IAAML,WAUtC,OAFuCM,YAAQX,EAARW,CAAyBL,K,sFCX5D,SAASM,EAAWJ,GACxB,OACI,yBAAKK,UAAWC,IAAEC,QACd,kBAAC,IAAD,CAASN,GAAI,YAAcD,EAAMQ,GAAIC,gBAAiBH,IAAEI,QAASV,EAAMW,O,sBCF5E,SAASC,EAAQZ,GACpB,MAAuB,UAAhBA,EAAMa,MACT,yBAAKR,UAAWC,IAAEQ,cACd,yBAAKC,IAAKC,MACV,yBAAKX,UAAWC,IAAEW,SACbjB,EAAMiB,UAIf,yBAAKZ,UAAWC,IAAEY,cACd,yBAAKb,UAAWC,IAAEW,SACbjB,EAAMiB,SAEX,yBAAKF,IAAKC,O,qCCsBtB,IAAMG,EAAcC,YAAiB,IAgBxBC,EAAoBC,YAAgC,CAACC,KAAM,eAAvCD,EAdL,SAACtB,GACzB,OACI,0BAAMwB,SAAUxB,EAAMyB,cAClB,kBAACC,EAAA,EAAD,CAAOrB,UAAWC,IAAEqB,YACbC,UAAWC,IACXC,SAAU,CAACC,IAAUZ,GACrBR,KAAM,iBACNqB,YAAa,oBAEpB,4BAAQ3B,UAAWC,IAAE2B,cAArB,c,wBCvBNC,EAAmBC,YACrBhC,aAzBkB,SAACiC,GACnB,MAAO,CACHC,aAAcD,EAAME,aACpB5C,OAAQ0C,EAAMzC,KAAKD,WASF,SAAC6C,GACtB,MAAO,CACHC,cAAe,SAACC,GACZF,EAAS,CAACG,KAAM,kBAAmBD,oBAc3C7C,IALqBuC,EDhBlB,SAAiBnC,GAEpB,IAAI2C,EAAkB3C,EAAMqC,aAAaO,QAAQC,KAAI,SAAAtC,GAAM,OAAI,kBAACH,EAAD,CAAYO,KAAMJ,EAAOI,KAAMH,GAAID,EAAOC,QACrGsC,EAAmB9C,EAAMqC,aAAaU,SAASF,KAAI,SAAA5B,GAAO,OAAI,kBAACL,EAAD,CAASJ,GAAIS,EAAQT,GAAIK,MAAOI,EAAQJ,MAC/BI,QAASA,EAAQA,aAM5F,OACI,yBAAKZ,UAAWC,IAAEsC,SACd,yBAAKvC,UAAWC,IAAE0C,cACbL,GAEL,yBAAKtC,UAAWC,IAAEyC,UACbD,EACF,kBAACzB,EAAD,CAAmBG,SAXH,SAACyB,GACxBjD,EAAMwC,cAAcS,EAAKC,wBCiBlBhB","file":"static/js/4.bafb96cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__tivBQ\",\"dialog\":\"Dialogs_dialog__1Aayz\",\"dialogsItems\":\"Dialogs_dialogsItems__2RL6q\",\"active\":\"Dialogs_active__35EX-\",\"messages\":\"Dialogs_messages__3Lt26\",\"message\":\"Dialogs_message__1UZ-O\",\"messageItem1\":\"Dialogs_messageItem1__2qjG7\",\"messageItem2\":\"Dialogs_messageItem2__3PJwk\",\"newMessageArea\":\"Dialogs_newMessageArea__3Ihyf\",\"messageArea\":\"Dialogs_messageArea__BNQPo\",\"submitButton\":\"Dialogs_submitButton__qCfEj\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\n\r\nconst MapStateToProps = (store: AppStateType) => {\r\n    return {\r\n        isAuth: store.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const WithAuthRedirect = (Component: Function) => {\r\n    class RedirectComponent extends React.Component<any> {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    const ConnectedAuthRedirectComponent = connect(MapStateToProps)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import React from 'react';\r\nimport s from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype DialogItemPropsType = {\r\n    name: string\r\n    id: string\r\n}\r\n\r\n export function DialogItem(props: DialogItemPropsType) {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={\"/dialogs/\" + props.id} activeClassName={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport s from \"./../Dialogs.module.css\";\r\nimport userAva from './../../../assets/images/userAvajpg.jpg'\r\n\r\nexport type MessagePropsType = {\r\n    id: number\r\n    message: string\r\n    owner: \"first\" | \"second\"\r\n}\r\n\r\nexport function Message(props: MessagePropsType) {\r\n    return props.owner === \"first\" ?\r\n        <div className={s.messageItem1}>\r\n            <img src={userAva}/>\r\n            <div className={s.message}>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n     :\r\n        <div className={s.messageItem2}>\r\n            <div className={s.message}>\r\n                {props.message}\r\n            </div>\r\n            <img src={userAva}/>\r\n        </div>\r\n}\r\n","import React from 'react';\r\nimport s from \"./Dialogs.module.css\";\r\nimport {DialogItem} from './DialogItem/DialogItem';\r\nimport {Message} from \"./Message/Message\";\r\nimport {MessagePageType} from \"../../redux/state\";\r\nimport {reduxForm, Field, InjectedFormProps} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\ntype DialogsPropsType = {\r\n    dialogsState: MessagePageType\r\n    onChangeNewMessageBody: (text: string) => void\r\n    onSendMessage: (newMessage: string) => void\r\n    onSendMessageKeyPress: () => void\r\n    isAuth: boolean\r\n}\r\n\r\nexport function Dialogs(props: DialogsPropsType) {\r\n\r\n    let dialogsElements = props.dialogsState.dialogs.map(dialog => <DialogItem name={dialog.name} id={dialog.id}/>);\r\n    let messagesElements = props.dialogsState.messages.map(message => <Message id={message.id} owner={message.owner}\r\n                                                                               message={message.message}/>);\r\n\r\n    const onSendMessageClick = (data: MessageFieldDataType) => {\r\n        props.onSendMessage(data.newMessageBody)\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n               <ReduxMessageField onSubmit={onSendMessageClick}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\ntype MessageFieldDataType = {\r\n    newMessageBody: string\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nexport const MessageField = (props: InjectedFormProps<MessageFieldDataType>) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field className={s.messageArea}\r\n                   component={Textarea}\r\n                   validate={[required, maxLength50]}\r\n                   name={\"newMessageBody\"}\r\n                   placeholder={\"Add new message\"}\r\n            />\r\n            <button className={s.submitButton}>Submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const ReduxMessageField = reduxForm<MessageFieldDataType>({form: \"messageArea\"})(MessageField)","import React from 'react';\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {ActionTypes, AppStateType} from \"../../redux/redux-store\";\r\nimport {InitialStateType} from \"../../redux/MessageReducer\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        dialogsState: state.messagesPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    dialogsState: InitialStateType\r\n    isAuth: boolean\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: (action: ActionTypes) => void): MapDispatchToPropsType => {\r\n    return {\r\n        onSendMessage: (newMessage: string) => {\r\n            dispatch({type: \"ADD-NEW-MESSAGE\", newMessage})\r\n        }\r\n    }\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    onSendMessage: (newMessage: string) => void\r\n}\r\n\r\nconst DialogsContainer = compose<React.ComponentType>(\r\n    connect<MapStateToPropsType,\r\n        MapDispatchToPropsType,\r\n        {},\r\n        AppStateType>(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(Dialogs)\r\n\r\nexport default DialogsContainer\r\n"],"sourceRoot":""}